{
    "name": "edu.umn.cs.ivlab.minvr3.xritoolkit",
    "displayName": "MinVR3 XRI Toolkit Plugin",
    "description": "MinVR3 Plugin Unity Package that supports using MinVR3 together with Unity's XR Interaction Toolkit",
    "version": "0.1.0",
    "unity": "2020.3",
    "author": { "name": "IVLab", "email": "dfk@umn.edu", "url": "https://ivlab.cs.umn.edu" },
    "documentationUrl": "https://pages.github.umn.edu/ivlab-cs/Template-UnityPackage",
    "changelogUrl": "https://pages.github.umn.edu/ivlab-cs/MinVR3-XRIToolkit-UnityPackage/manual/changelog.html",
    "licensesUrl": "https://pages.github.umn.edu/ivlab-cs/TMinVR3-XRIToolkit-UnityPackage/manual/license.html",
    "hideInEditor": "false",
    "samples": [
        {
            "displayName": "A Tale of Two Menus",
            "description": "Two menus are displayed in the same scene, one created with MinVR3, the other with a Unity Canvas.  Demonstrates how to combine MinVR interfaces with interfaces from Unity's XR Interaction Toolkit, which include support for using XR Controllers to interact with Unity UI Canvases.",
            "path": "Samples~/TwoMenus"
        },
        {
            "displayName": "Multi-Platform UI Canvas",
            "description": "Demonstrates how to use MinVR's VRConfig system (VRConfig, VRConfigMask, and ConfigVals) to create an app that can run in a Native Desktop mode (i.e., mouse and keyboard input to control screen-overlay UI canvases) and a variety of VR Modes where the canvases switch to world-space rendering mode and become room-space 3D widgets controlled with a laser pointer.",
            "path": "Samples~/MultiPlatformUICanvas"
        }
    ]
}
